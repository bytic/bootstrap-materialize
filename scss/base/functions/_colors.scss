@use "sass:color";
@use "sass:math";

@function color-yiq($color) {
  $r: color.channel($color, 'red', $space: rgb);
  $g: color.channel($color, 'green', $space: rgb);
  $b: color.channel($color, 'blue', $space: rgb);

  $yiq:  math.div($r * 299 + $g * 587 + $b * 114, 1000);

  @if ($yiq >= $yiq-contrasted-threshold) {
    @return $yiq-text-dark;
  } @else {
    @return $yiq-text-light;
  }
}

// Retrieve a colour

@function color($key: amber) {
  @return map-get($colors, $key);
}

@function theme-color($key: primary) {
  @return map-get(map-get($theme-palette, $key), main);
}

@function theme-color-dark($key: primary) {
  @return map-get(map-get($theme-palette, $key), dark);
}

@function theme-color-light($key: primary) {
  @return map-get(map-get($theme-palette, $key), light);
}
